{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","utils/normalizeMovieData.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","normalizeMovieData","data","Title","Plot","Poster","imdbID","FindMovie","onAdd","useState","setMovie","setQuery","hasError","setErrorStatus","isLoading","setLoadingStatus","handleMovie","a","result","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","handleMoviesList","useCallback","some","film","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0a3d6f1.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=a779b3f1';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { Movie } from '../types/Movie';\nimport { MovieData } from '../types/MovieData';\n\nexport const normalizeMovieData = (data: MovieData): Movie => {\n  const {\n    Title,\n    Plot,\n    Poster,\n    imdbID,\n  } = data;\n\n  return {\n    title: Title,\n    description: Plot,\n    imgUrl: Poster === 'N/A'\n      ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n      : Poster,\n    imdbId: imdbID,\n    imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n  };\n};\n","import classNames from 'classnames';\nimport React, { ChangeEvent, useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { normalizeMovieData } from '../../utils/normalizeMovieData';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [hasError, setErrorStatus] = useState(false);\n  const [isLoading, setLoadingStatus] = useState(false);\n\n  const handleQuery = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setErrorStatus(false);\n  };\n\n  const handleMovie = async () => {\n    setLoadingStatus(true);\n\n    try {\n      const result = await getMovie(query);\n\n      if ((result as MovieData).Title) {\n        setMovie(normalizeMovieData(result as MovieData));\n        setErrorStatus(false);\n      } else {\n        setErrorStatus(true);\n      }\n    } catch (error) {\n      setErrorStatus(true);\n    } finally {\n      setLoadingStatus(false);\n    }\n  };\n\n  const addMovie = ():void => {\n    onAdd(movie as Movie);\n    setQuery('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          handleMovie();\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleQuery}\n            />\n          </div>\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!query}\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleMoviesList = useCallback((movie: Movie): void => {\n    const hasMovie = movies.some(film => film.imdbId === movie.imdbId);\n\n    if (!hasMovie) {\n      setMovies([\n        ...movies,\n        movie,\n      ]);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={handleMoviesList} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}